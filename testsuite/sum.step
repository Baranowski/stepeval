let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
    sum = foldr (+) 0
 in sum [1,2,3]

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in foldr (+) 0 [1,2,3]

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in foldr (+) 0 (1 : [2,3])

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in 1 + foldr (+) 0 [2,3]

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in 1 + foldr (+) 0 (2 : [3])

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in 1 + (2 + foldr (+) 0 [3])

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in 1 + (2 + foldr (+) 0 (3 : []))

let foldr (*) z [] = z
    foldr (*) z (x:xs) = x * foldr (*) z xs
 in 1 + (2 + (3 + foldr (+) 0 []))

1 + (2 + (3 + 0))

1 + (2 + 3)

1 + 5

6
